# CI/CD configuration file

# Define stages for the pipeline
stages:
  - build
  - deploy

# Cache configuration to speed up the build process
cache:
  key: "$CI_COMMIT_REF_SLUG"
  paths:
    - dist/  # Cache the 'dist' directory

# Build stage
app_build:
  stage: build
  script:
    - npm install  # Install project dependencies
    - npm run build  # Build the project
    - echo "Build Completed!"  # Print a completion message
  tags: # Tags specify the GitLab runner where this pipeline will be executed
    - mygitlabrunner
  only: # Define which branches trigger this pipeline stage
    - main

# Deploy stage
app_deploy:
  stage: deploy
  script:
    - |
      # Save the SSH private key to a file
      echo "$EC2_SSH_KEY" > ~/Downloads/kafka1.pem
      
      # Change the Key Permissions
      chmod 600 ~/Downloads/kafka1.pem
      
      # Zip the dist directory
      zip -r dist.zip dist/
      
      # Transfer the zip file via SCP
      scp -v -o StrictHostKeyChecking=no -i ~/Downloads/kafka1.pem dist.zip ec2-user@54.80.226.154:/home/ec2-user
      
      # SSH into the remote server and unzip the file
      ssh -o StrictHostKeyChecking=no -i ~/Downloads/kafka1.pem ec2-user@54.80.226.154 "
        # Remove old files from the target directory
        rm -vrf /home/ec2-user/* && \
        
        # Move the zip file to the target directory
        mv /home/ec2-user/dist.zip /home/ec2-user/ && \
        
        # Change to the target directory
        cd /home/ec2-user && \
        
        # Unzip the file
        unzip -o dist.zip && \
        
        # Move extracted files if needed
        mv dist/* . && \
        
        # Clean up
        rm -rf dist dist.zip"
      
      # Remove the zip file after transfer
      rm dist.zip

      echo "Deployment Completed!"  # Print a completion message
  tags:  # Tags specify the GitLab runner where this pipeline will be executed
    - mygitlabrunner
  only:  # Define which branches trigger this pipeline stage
    - main