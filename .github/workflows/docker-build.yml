name: Build and Push Docker Image to Amazon ECR

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Log in to Amazon ECR
        uses: aws-actions/amazon-ecr-login@v1
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: ${{ secrets.AWS_REGION }}

      - name: Build, tag, and push image to ECR
        run: |
          docker build -t react-automate .
          docker tag react-automate:latest 299030377158.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/react-automate:latest
          docker push 299030377158.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/react-automate:latest

  deploy:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Deploy to EC2 via SSH
        uses: appleboy/ssh-action@v0.1.1
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ubuntu
          port: 22
          script: |
            eval $(ssh-agent -s)
            ssh-add <(echo "$EC2_SSH_KEY")
            sudo systemctl stop nginx
            docker stop react-automate || true
            docker rm react-automate || true
            aws ecr get-login-password --region ${{ secrets.AWS_REGION }} | docker login --username AWS --password-stdin 299030377158.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com
            docker pull 299030377158.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/react-automate:latest
            docker run -d -p 80:3000 --name react-automate 299030377158.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/react-automate:latest
